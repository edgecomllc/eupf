// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/config": {
            "get": {
                "description": "Display configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Display configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.UpfConfig"
                        }
                    }
                }
            }
        },
        "/pfcp_associations": {
            "get": {
                "description": "List PFCP associations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PFCP"
                ],
                "summary": "List PFCP associations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.NodeAssociationMap"
                        }
                    }
                }
            }
        },
        "/qer_map": {
            "get": {
                "description": "List QER map content",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QER"
                ],
                "summary": "List QER map content",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.QerMapElement"
                            }
                        }
                    }
                }
            }
        },
        "/upf_pipeline": {
            "get": {
                "description": "List UPF pipeline",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UPF"
                ],
                "summary": "List UPF pipeline",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.BpfMapProgArrayMember"
                            }
                        }
                    }
                }
            }
        },
        "/xdp_stats": {
            "get": {
                "description": "Display XDP statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "XDP"
                ],
                "summary": "Display XDP statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.XdpStats"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.BpfMapProgArrayMember": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "duration_enabled": {
                    "type": "boolean"
                },
                "fd": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "run_count": {
                    "type": "integer"
                },
                "run_count_enabled": {
                    "type": "boolean"
                }
            }
        },
        "main.FarInfo": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "integer"
                },
                "localIP": {
                    "type": "integer"
                },
                "outerHeaderCreation": {
                    "type": "integer"
                },
                "remoteIP": {
                    "type": "integer"
                },
                "teid": {
                    "type": "integer"
                }
            }
        },
        "main.NodeAssociation": {
            "type": "object",
            "properties": {
                "addr": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nextSessionID": {
                    "type": "integer"
                },
                "sessions": {
                    "$ref": "#/definitions/main.SessionMap"
                }
            }
        },
        "main.NodeAssociationMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/main.NodeAssociation"
            }
        },
        "main.PdrInfo": {
            "type": "object",
            "properties": {
                "farId": {
                    "type": "integer"
                },
                "outerHeaderRemoval": {
                    "type": "integer"
                },
                "qerId": {
                    "type": "integer"
                }
            }
        },
        "main.QerInfo": {
            "type": "object",
            "properties": {
                "gateStatusDL": {
                    "type": "integer"
                },
                "gateStatusUL": {
                    "type": "integer"
                },
                "maxBitrateDL": {
                    "type": "integer"
                },
                "maxBitrateUL": {
                    "type": "integer"
                },
                "qfi": {
                    "type": "integer"
                },
                "startDL": {
                    "type": "integer"
                },
                "startUL": {
                    "type": "integer"
                }
            }
        },
        "main.QerMapElement": {
            "type": "object",
            "properties": {
                "gate_status_dl": {
                    "type": "integer"
                },
                "gate_status_ul": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "max_bitrate_dl": {
                    "type": "integer"
                },
                "max_bitrate_ul": {
                    "type": "integer"
                },
                "qfi": {
                    "type": "integer"
                }
            }
        },
        "main.SPDRInfo": {
            "type": "object",
            "properties": {
                "ipv4": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "pdrInfo": {
                    "$ref": "#/definitions/main.PdrInfo"
                },
                "teid": {
                    "type": "integer"
                }
            }
        },
        "main.Session": {
            "type": "object",
            "properties": {
                "downlinkPDRs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/main.SPDRInfo"
                    }
                },
                "fars": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/main.FarInfo"
                    }
                },
                "localSEID": {
                    "type": "integer"
                },
                "qers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/main.QerInfo"
                    }
                },
                "remoteSEID": {
                    "type": "integer"
                },
                "uplinkPDRs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/main.SPDRInfo"
                    }
                }
            }
        },
        "main.SessionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/main.Session"
            }
        },
        "main.UpfConfig": {
            "type": "object",
            "properties": {
                "apiAddress": {
                    "type": "string"
                },
                "interfaceName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metricsAddress": {
                    "type": "string"
                },
                "n3Address": {
                    "type": "string"
                },
                "pfcpAddress": {
                    "type": "string"
                },
                "pfcpNodeId": {
                    "type": "string"
                },
                "xdpattachMode": {
                    "type": "string",
                    "enum": [
                        "generic",
                        "native",
                        "offload"
                    ]
                }
            }
        },
        "main.XdpStats": {
            "type": "object",
            "properties": {
                "aborted": {
                    "type": "integer"
                },
                "drop": {
                    "type": "integer"
                },
                "pass": {
                    "type": "integer"
                },
                "redirect": {
                    "type": "integer"
                },
                "tx": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
