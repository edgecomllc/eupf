---

global:
  imagePullPolicy: IfNotPresent

replicaCount: 1

# See `kubectl explain deployment.spec.strategy` for more
# ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
deploymentStrategy:
  type: RollingUpdate

image:
  registry: ghcr.io
  repository: edgecomllc
  name: eupf
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

# Override default container command
command: []

# Override default container args
args: []

initContainers: []
  # - name: run-db-migrations
  #   # if "" then uses default image for this chart
  #   image: ""
  #   command:
  #     - /bin/sh
  #     - -ec
  #     - |
  #       python3 manage.py migrate
  # - name: run-something
  #   image: ""
  #   command:
  #     - /bin/sh
  #     - -ec
  #     - |
  #       echo "start something"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Additional environment variables
env: {}
  # foo: bar

# create config maps
configMaps: {}
  # config:
  #   additionalLabels:
  #     foo: bar
  #   additionalAnnotations:
  #     foo: bar
  #   data:
  #     config.yml: |
  #       foo: bar

# volumes
volumes: {}
  # - name: config
  #   configMap:
  #     name: eupf-config

# volume mounts
volumeMounts: {}
  # - name: config
  #   mountPath: /app/conf

hostNetwork: false

xdpProgrammInstall:
  enabled: false
  securityContext:
    capabilities:
      add:
        - NET_ADMIN
    privileged: true
    runAsNonRoot: false
  env:
    - name: POD_N6_IP
      value: 10.100.100.12
  command:
    - /bin/sh
    - -c
    - |
      echo "starting"; \
      i=0; IFACE_NAME=""; \
      while [ -z "$IFACE_NAME" ]; \
      do \
        echo "check $i: searching interface name"; sleep 1; \
        IFACE_NAME=$(ip route list ${POD_N6_IP} | awk '{print $3}'); \
        i=$((i+1)); \
      done ;\
      echo "done: current interface name is ${IFACE_NAME}" ;\
      set -x ;\
      ls -alh /app ;\
      ip link set dev ${IFACE_NAME} xdpdrv obj /app/zero_entrypoint_bpf.o sec xdp/upf_zero_entrypoint

bird:
  enabled: false
  image: docker.io/edgecom/bird:0.0.4
  env:
    BIRD_ROUTER_ID: $(MY_POD_IP)
    BIRD_LOCAL_AS: 65000
    BIRD_LOCAL_PREFIX: 10.45.0.0/16
    BIRD_NEIGHBOR_IP: $(MY_NODE_IP)
    BIRD_NEIGHBOR_AS: 64512
  service:
    enabled: false
    type: ClusterIP
    port: 179
  ports:
    - name: bgp
      containerPort: 179
      protocol: TCP
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  livenessProbe:
    tcpSocket:
      port: bgp
    initialDelaySeconds: 5
    periodSeconds: 10
  readinessProbe:
    tcpSocket:
      port: bgp
    initialDelaySeconds: 5
    periodSeconds: 10

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

metrics:
  enabled: false
  serviceMonitor:
    # Create ServiceMonitor Resource for scraping metrics using Prometheus Operator
    enabled: false
    # Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
    namespace: ""
    # Interval at which metrics should be scraped.
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    interval: ""
    # Timeout after which the scrape is ended
    # ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    scrapeTimeout: ""
    # Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
    labels: {}
    # Prometheus instance selector labels
    # ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    selector: {}
    # RelabelConfigs to apply to samples before scraping
    relabelings: []
    # MetricRelabelConfigs to apply to samples before ingestion
    metricRelabelings: []
    # Specify honorLabels parameter to add the scrape endpoint
    honorLabels: false
    # The name of the label on the target service to use as the job name in prometheus.
    jobLabel: ""
    endpoints:
      port: metrics
      path: "/metrics"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

extraContainerPorts: []
  # - name: metrics
  #   containerPort: 9090
  #   protocol: TCP

service:
  type: ClusterIP
  port: 80
  extraPorts: []
    # - port: 9090
    #   targetPort: metrics
    #   protocol: TCP
    #   name: metrics

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe: {}
  # We usually recommend to specify probes, read https://habr.com/ru/company/nixys/blog/544288/
  # tcpSocket:
  #   port: http
  # initialDelaySeconds: 5
  # periodSeconds: 10

readinessProbe: {}
  # We usually recommend to specify probes, read https://habr.com/ru/company/nixys/blog/544288/
  # httpGet:
  #   path: /healthz
  #   port: http
  # initialDelaySeconds: 5
  # periodSeconds: 10

startupProbe: {}
  # We usually recommend to specify probes, read https://habr.com/ru/company/nixys/blog/544288/
  # httpGet:
  #   path: /healthz
  #   port: http
  # failureThreshold: 30
  # periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}

# Array of extra objects to deploy with the release
extraDeploy: []
  # - apiVersion: k8s.cni.cncf.io/v1
  #   kind: NetworkAttachmentDefinition
  #   metadata:
  #     name: n3network-upf
  #     namespace: free5gc
  #   spec:
  #     config: |
  #       {
  #         "cniVersion": "0.3.1",
  #         "plugins": [
  #           {
  #             "type": "ipvlan",
  #             "capabilities": { "ips": true },
  #             "master": "ens3",
  #             "mode": "l2",
  #             "ipam": {
  #               "type": "static",
  #               "routes": [
  #                 {
  #                   "dst": "0.0.0.0/0",
  #                   "gw": "10.100.50.238"
  #                 }
  #               ]
  #             }
  #           }
  #         ]
  #       }
